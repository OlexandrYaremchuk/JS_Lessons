{"ast":null,"code":"var _jsxFileName = \"/home/Olexandr/Documents/JavaScript/JS-WorkBook/js-work-book/src/Components/Navbar/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react';\n\n// данные для примера, которые вообще-то должны браться из базы данных, например.\n// содержат список категории и моделей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: 1,\n  lesson: 'Модуль 1 - Заняття 1 - Змінні та типи',\n  theme: [{\n    id: 1,\n    name: 'Знайомство з JavaScript'\n  }, {\n    id: 2,\n    name: 'Підключення скрипта'\n  }, {\n    id: 3,\n    name: 'Інструменти розробника'\n  }, {\n    id: 4,\n    name: 'Основи синтаксису'\n  }, {\n    id: 5,\n    name: 'Змінні та типи'\n  }, {\n    id: 6,\n    name: 'Взаємодія з користувачем'\n  }, {\n    id: 7,\n    name: 'Основні оператори'\n  }, {\n    id: 8,\n    name: 'Числа'\n  }, {\n    id: 9,\n    name: 'Рядки'\n  }, {\n    id: 10,\n    name: 'Логічні оператори'\n  }]\n}, {\n  id: 2,\n  lesson: 'Модуль 1 - Заняття 2 - Розгалуження та цикли',\n  theme: [{\n    id: 1,\n    name: 'Розгалуження'\n  }, {\n    id: 2,\n    name: 'Тернарний оператор'\n  }, {\n    id: 3,\n    name: 'Інструкція Switch'\n  }, {\n    id: 4,\n    name: 'Область видимості'\n  }, {\n    id: 5,\n    name: 'Цикли'\n  }]\n}];\n\n// компонент пользовательского выпадающего списка\nconst CustomSelect = _ref => {\n  let {\n    id,\n    options,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"custom-select\",\n    id: id,\n    onChange: onChange,\n    children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.id,\n      children: option.name\n    }, id + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n// главный компонент приложения\n_c = CustomSelect;\nconst Navbar = () => {\n  _s();\n  const [categories, setCategories] = useState([]); // хранилище категорий\n  const [models, setModels] = useState([]); // хранилище моделей\n\n  // при первой загрузке приложения выполнится код ниже\n  useEffect(() => {\n    // устанавливаем категории\n    setCategories(data.legnth > 0 && data);\n\n    // и модели из первой категории по умолчанию\n    setModels(data.length > 0 && data[0].models && data[0].models.length > 0);\n  }, []);\n\n  // при выборе нового значения в категории\n  const onCategoriesSelectChange = e => {\n    // преобразуем выбранное значение опции списка в число - идентификатор категории\n    const categoryId = parseInt(e.target.options[e.target.selectedIndex].value);\n\n    // получаем из массива категорий объект категрии по соответствующему идентификатору\n    const category = categories.find(item => item.id === categoryId);\n\n    // выбираем все модели в категории, если таковые есть\n    const models = category.models && category.models.length > 0 ? category.models : [{\n      id: 0,\n      name: 'Нет моделей',\n      items: []\n    }];\n\n    // меняем модели во втором списке\n    setModels(models);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          id: \"category\",\n          options: categories,\n          onChange: onCategoriesSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"model\",\n          children: \"\\u041C\\u0430\\u0440\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          id: \"model\",\n          options: models\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"nQy5d5rmylkjUUKp0sanloEqqVM=\");\n_c2 = Navbar;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomSelect\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["ReactDOM","React","useState","useEffect","data","id","lesson","theme","name","CustomSelect","options","onChange","map","option","index","Navbar","categories","setCategories","models","setModels","legnth","length","onCategoriesSelectChange","e","categoryId","parseInt","target","selectedIndex","value","category","find","item","items"],"sources":["/home/Olexandr/Documents/JavaScript/JS-WorkBook/js-work-book/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react';\n\n// данные для примера, которые вообще-то должны браться из базы данных, например.\n// содержат список категории и моделей\nconst data = [\n    {\n        id: 1,\n        lesson: 'Модуль 1 - Заняття 1 - Змінні та типи',\n        theme: [\n            {\n                id: 1,\n                name: 'Знайомство з JavaScript'\n            },\n            {\n                id: 2,\n                name: 'Підключення скрипта',\n            },\n            {\n                id: 3,\n                name: 'Інструменти розробника',\n            },\n            {\n                id: 4,\n                name: 'Основи синтаксису',\n            },\n            {\n                id: 5,\n                name: 'Змінні та типи',\n            },\n            {\n                id: 6,\n                name: 'Взаємодія з користувачем',\n            },\n            {\n                id: 7,\n                name: 'Основні оператори',\n            },\n            {\n                id: 8,\n                name: 'Числа',\n            },\n            {\n                id: 9,\n                name: 'Рядки',\n            },\n            {\n                id: 10,\n                name: 'Логічні оператори',\n            },\n        ]\n    },\n    {\n        id: 2,\n        lesson: 'Модуль 1 - Заняття 2 - Розгалуження та цикли',\n        theme: [\n            {\n                id: 1,\n                name: 'Розгалуження'\n            },\n            {\n                id: 2,\n                name: 'Тернарний оператор',\n            },\n            {\n                id: 3,\n                name: 'Інструкція Switch',\n            },\n            {\n                id: 4,\n                name: 'Область видимості',\n            },\n            {\n                id: 5,\n                name: 'Цикли',\n            },\n        ]\n    },\n\n];\n\n\n// компонент пользовательского выпадающего списка\nconst CustomSelect = ({ id, options, onChange }) => {\n    return (\n        <select className=\"custom-select\" id={id} onChange={onChange}>\n            {options.map((option, index) =>\n                <option key={id + index} value={option.id}>{option.name}</option>\n            )}\n        </select>\n    )\n}\n\n\n// главный компонент приложения\nconst Navbar = () => {\n\n    const [categories, setCategories] = useState([]); // хранилище категорий\n    const [models, setModels] = useState([]);         // хранилище моделей\n\n\n    // при первой загрузке приложения выполнится код ниже\n    useEffect(() => {\n\n        // устанавливаем категории\n        setCategories(data.legnth > 0 && data);\n\n        // и модели из первой категории по умолчанию\n        setModels(data.length > 0 && data[0].models && data[0].models.length > 0);\n\n    }, []);\n\n\n    // при выборе нового значения в категории\n    const onCategoriesSelectChange = (e) => {\n\n        // преобразуем выбранное значение опции списка в число - идентификатор категории\n        const categoryId = parseInt(e.target.options[e.target.selectedIndex].value);\n\n        // получаем из массива категорий объект категрии по соответствующему идентификатору\n        const category = categories.find(item => item.id === categoryId);\n\n        // выбираем все модели в категории, если таковые есть\n        const models = category.models && category.models.length > 0\n            ? category.models\n            : [{ id: 0, name: 'Нет моделей', items: [] }];\n\n        // меняем модели во втором списке\n        setModels(models);\n    }\n\n\n    return (\n        <div className=\"container mt-5\">\n\n            <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"category\">Категории</label>\n                    <CustomSelect id=\"category\" options={categories} onChange={onCategoriesSelectChange} />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"model\">Марки</label>\n                    <CustomSelect id=\"model\" options={models} />\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Navbar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}